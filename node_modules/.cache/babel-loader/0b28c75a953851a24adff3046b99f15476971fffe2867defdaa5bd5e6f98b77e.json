{"ast":null,"code":"var _jsxFileName = \"/Users/darshan.a/Documents/Fraud Guard/fraud-guard/src/components/VoiceChatBot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport annyang from \"annyang\";\nimport ChatInput from \"./ChatInput\";\nimport Box from \"@mui/material/Box\";\nimport ChatData from \"./ChatData\";\nimport axios from \"axios\";\nimport { Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const VoiceChatBot = _ref => {\n  _s();\n  let {\n    ipData\n  } = _ref;\n  const [chat, setChatData] = useState([]);\n  const [aiData, setAiData] = useState([]);\n  function stopRecording() {\n    if (annyang) {\n      annyang.removeCallback(\"result\", handleSpeechResult);\n      annyang.abort();\n    }\n  }\n  function startRecoding() {\n    annyang.start();\n    if (annyang) {\n      annyang.start();\n      annyang.addCallback(\"result\", handleSpeechResult);\n    }\n  }\n  async function sendPostData(query) {\n    console.log(\"queru \", query);\n    const response = await axios.post(\"http://127.0.0.1:5000/bard_response\", {\n      question: query\n    });\n    setAiData(prev => [...prev, response.data]);\n  }\n  const handleSpeechResult = userSaid => {\n    // setText(userSaid);\n    setChatData(prev => [...prev, userSaid]);\n    setTimeout(stopRecording, 1000);\n  };\n  const setTextInput = query => {\n    setChatData(prev => [...prev, query]);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      gap: 5,\n      marginTop: 5\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(ChatInput, {\n        startRecoding: startRecoding,\n        sendPostData: sendPostData,\n        setTextInput: setTextInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        border: \"1px solid black\",\n        width: 1000,\n        maxHeight: \"calc(100vh - 100px)\",\n        height: \"100%\",\n        overflow: \"auto\",\n        borderRadius: \"10px\",\n        fontFamily: \"inherit\",\n        minHeight: \"150px\"\n      },\n      children: [chat.length === 0 && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"p\",\n        children: \"No Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 31\n      }, this), chat.length > 0 && /*#__PURE__*/_jsxDEV(ChatData, {\n        aiData: aiData,\n        ipData: ipData,\n        chat: chat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(VoiceChatBot, \"+OLFIV0vBdhlCvt2WvApO3LZfPw=\");\n_c = VoiceChatBot;\nconst TextDisplay = _ref2 => {\n  let {\n    text\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_c2 = TextDisplay;\nexport default VoiceChatBot;\nvar _c, _c2;\n$RefreshReg$(_c, \"VoiceChatBot\");\n$RefreshReg$(_c2, \"TextDisplay\");","map":{"version":3,"names":["React","useState","annyang","ChatInput","Box","ChatData","axios","Typography","jsxDEV","_jsxDEV","VoiceChatBot","_ref","_s","ipData","chat","setChatData","aiData","setAiData","stopRecording","removeCallback","handleSpeechResult","abort","startRecoding","start","addCallback","sendPostData","query","console","log","response","post","question","prev","data","userSaid","setTimeout","setTextInput","sx","display","flexDirection","alignItems","gap","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","border","width","maxHeight","height","overflow","borderRadius","fontFamily","minHeight","length","variant","_c","TextDisplay","_ref2","text","_c2","$RefreshReg$"],"sources":["/Users/darshan.a/Documents/Fraud Guard/fraud-guard/src/components/VoiceChatBot.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport annyang from \"annyang\";\nimport ChatInput from \"./ChatInput\";\nimport Box from \"@mui/material/Box\";\nimport ChatData from \"./ChatData\";\nimport axios from \"axios\";\nimport { Typography } from \"@mui/material\";\n\nexport const VoiceChatBot = ({ ipData }) => {\n  const [chat, setChatData] = useState([]);\n  const [aiData, setAiData] = useState([]);\n\n  function stopRecording() {\n    if (annyang) {\n      annyang.removeCallback(\"result\", handleSpeechResult);\n      annyang.abort();\n    }\n  }\n\n  function startRecoding() {\n    annyang.start();\n\n    if (annyang) {\n      annyang.start();\n      annyang.addCallback(\"result\", handleSpeechResult);\n    }\n  }\n\n  async function sendPostData(query) {\n    console.log(\"queru \", query);\n    const response = await axios.post(\"http://127.0.0.1:5000/bard_response\", {\n      question: query,\n    });\n    setAiData((prev) => [...prev, response.data]);\n  }\n\n  const handleSpeechResult = (userSaid) => {\n    // setText(userSaid);\n    setChatData((prev) => [...prev, userSaid]);\n    setTimeout(stopRecording, 1000);\n  };\n\n  const setTextInput = (query) => {\n    setChatData((prev) => [...prev, query]);\n  };\n\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        gap: 5,\n        marginTop: 5,\n      }}\n    >\n      <Box>\n        <ChatInput\n          startRecoding={startRecoding}\n          sendPostData={sendPostData}\n          setTextInput={setTextInput}\n        />\n      </Box>\n      <Box\n        sx={{\n          border: \"1px solid black\",\n          width: 1000,\n          maxHeight: \"calc(100vh - 100px)\",\n          height: \"100%\",\n          overflow: \"auto\",\n          borderRadius: \"10px\",\n          fontFamily: \"inherit\",\n          minHeight: \"150px\",\n        }}\n      >\n        {chat.length === 0 && <Typography variant=\"p\">No Data</Typography>}\n        {chat.length > 0 && (\n          <ChatData aiData={aiData} ipData={ipData} chat={chat} />\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nconst TextDisplay = ({ text }) => {\n  return (\n    <div>\n      {/* <h2>Converted Text</h2> */}\n      <p>{text}</p>\n    </div>\n  );\n};\n\nexport default VoiceChatBot;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}