{"ast":null,"code":"var _jsxFileName = \"/Users/darshan.a/Documents/Fraud Guard/fraud-guard/src/components/ChatInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport MicIcon from \"@mui/icons-material/Mic\";\nimport Button from \"@mui/material/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatInput = _ref => {\n  _s();\n  let {\n    startRecoding,\n    setTextInput,\n    sendPostData\n  } = _ref;\n  const [message, setMessage] = useState(\"\");\n  const num = parseInt(Math.random() * 100);\n  const handleInputChange = event => {\n    setMessage(event.target.value);\n  };\n  const handleSendMessage = () => {\n    if (message.trim() !== \"\") {\n      setMessage(\"\");\n      setTextInput({\n        query: message,\n        id: num\n      });\n      sendPostData({\n        query: message,\n        id: num\n      });\n    }\n    if (!message) startRecoding(num);\n  };\n  const handleKeyPress = event => {\n    if (event.key === \"Enter\") {\n      handleSendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(TextField, {\n      variant: \"outlined\",\n      label: \"Send you query...\",\n      sx: {\n        width: 1000,\n        marginX: 60\n      },\n      value: message,\n      onChange: handleInputChange,\n      onKeyPress: handleKeyPress,\n      InputProps: {\n        endAdornment: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            sx: {\n              width: 10,\n              borderRadius: \"50%\"\n            },\n            children: /*#__PURE__*/_jsxDEV(MicIcon, {\n              sx: {\n                marginX: 5,\n                padding: 0\n              },\n              onClick: handleSendMessage,\n              style: {\n                cursor: \"pointer\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            sx: {\n              width: 10,\n              borderRadius: \"50%\"\n            },\n            children: /*#__PURE__*/_jsxDEV(SendIcon, {\n              style: {\n                cursor: \"pointer\"\n              },\n              onClick: handleSendMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInput, \"EiOGSxO4GWQlH0sM782nQ9JwuAs=\");\n_c = ChatInput;\nexport default ChatInput;\nvar _c;\n$RefreshReg$(_c, \"ChatInput\");","map":{"version":3,"names":["React","useState","TextField","SendIcon","MicIcon","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatInput","_ref","_s","startRecoding","setTextInput","sendPostData","message","setMessage","num","parseInt","Math","random","handleInputChange","event","target","value","handleSendMessage","trim","query","id","handleKeyPress","key","children","variant","label","sx","width","marginX","onChange","onKeyPress","InputProps","endAdornment","borderRadius","padding","onClick","style","cursor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/darshan.a/Documents/Fraud Guard/fraud-guard/src/components/ChatInput.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport MicIcon from \"@mui/icons-material/Mic\";\nimport Button from \"@mui/material/Button\";\n\nconst ChatInput = ({ startRecoding, setTextInput, sendPostData }) => {\n  const [message, setMessage] = useState(\"\");\n  const num = parseInt(Math.random() * 100);\n  const handleInputChange = (event) => {\n    setMessage(event.target.value);\n  };\n\n  const handleSendMessage = () => {\n    if (message.trim() !== \"\") {\n      setMessage(\"\");\n      setTextInput({ query: message, id: num });\n      sendPostData({ query: message, id: num });\n    }\n    if (!message) startRecoding(num);\n  };\n\n  const handleKeyPress = (event) => {\n    if (event.key === \"Enter\") {\n      handleSendMessage();\n    }\n  };\n\n  return (\n    <div>\n      <TextField\n        variant=\"outlined\"\n        label=\"Send you query...\"\n        sx={{\n          width: 1000,\n          marginX: 60,\n        }}\n        value={message}\n        onChange={handleInputChange}\n        onKeyPress={handleKeyPress}\n        InputProps={{\n          endAdornment: (\n            <>\n              <Button\n                sx={{\n                  width: 10,\n                  borderRadius: \"50%\",\n                }}\n              >\n                <MicIcon\n                  sx={{\n                    marginX: 5,\n                    padding: 0,\n                  }}\n                  onClick={handleSendMessage}\n                  style={{ cursor: \"pointer\" }}\n                />\n              </Button>\n              <Button\n                sx={{\n                  width: 10,\n                  borderRadius: \"50%\",\n                }}\n              >\n                <SendIcon\n                  style={{ cursor: \"pointer\" }}\n                  onClick={handleSendMessage}\n                />\n              </Button>\n            </>\n          ),\n        }}\n      />\n    </div>\n  );\n};\n\nexport default ChatInput;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAOC,OAAO,MAAM,yBAAyB;AAC7C,OAAOC,MAAM,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1C,MAAMC,SAAS,GAAGC,IAAA,IAAmD;EAAAC,EAAA;EAAA,IAAlD;IAAEC,aAAa;IAAEC,YAAY;IAAEC;EAAa,CAAC,GAAAJ,IAAA;EAC9D,MAAM,CAACK,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMiB,GAAG,GAAGC,QAAQ,CAACC,IAAI,CAACC,MAAM,EAAE,GAAG,GAAG,CAAC;EACzC,MAAMC,iBAAiB,GAAIC,KAAK,IAAK;IACnCN,UAAU,CAACM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAChC,CAAC;EAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAIV,OAAO,CAACW,IAAI,EAAE,KAAK,EAAE,EAAE;MACzBV,UAAU,CAAC,EAAE,CAAC;MACdH,YAAY,CAAC;QAAEc,KAAK,EAAEZ,OAAO;QAAEa,EAAE,EAAEX;MAAI,CAAC,CAAC;MACzCH,YAAY,CAAC;QAAEa,KAAK,EAAEZ,OAAO;QAAEa,EAAE,EAAEX;MAAI,CAAC,CAAC;IAC3C;IACA,IAAI,CAACF,OAAO,EAAEH,aAAa,CAACK,GAAG,CAAC;EAClC,CAAC;EAED,MAAMY,cAAc,GAAIP,KAAK,IAAK;IAChC,IAAIA,KAAK,CAACQ,GAAG,KAAK,OAAO,EAAE;MACzBL,iBAAiB,EAAE;IACrB;EACF,CAAC;EAED,oBACEnB,OAAA;IAAAyB,QAAA,eACEzB,OAAA,CAACL,SAAS;MACR+B,OAAO,EAAC,UAAU;MAClBC,KAAK,EAAC,mBAAmB;MACzBC,EAAE,EAAE;QACFC,KAAK,EAAE,IAAI;QACXC,OAAO,EAAE;MACX,CAAE;MACFZ,KAAK,EAAET,OAAQ;MACfsB,QAAQ,EAAEhB,iBAAkB;MAC5BiB,UAAU,EAAET,cAAe;MAC3BU,UAAU,EAAE;QACVC,YAAY,eACVlC,OAAA,CAAAE,SAAA;UAAAuB,QAAA,gBACEzB,OAAA,CAACF,MAAM;YACL8B,EAAE,EAAE;cACFC,KAAK,EAAE,EAAE;cACTM,YAAY,EAAE;YAChB,CAAE;YAAAV,QAAA,eAEFzB,OAAA,CAACH,OAAO;cACN+B,EAAE,EAAE;gBACFE,OAAO,EAAE,CAAC;gBACVM,OAAO,EAAE;cACX,CAAE;cACFC,OAAO,EAAElB,iBAAkB;cAC3BmB,KAAK,EAAE;gBAAEC,MAAM,EAAE;cAAU;YAAE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAC7B;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACK,eACT3C,OAAA,CAACF,MAAM;YACL8B,EAAE,EAAE;cACFC,KAAK,EAAE,EAAE;cACTM,YAAY,EAAE;YAChB,CAAE;YAAAV,QAAA,eAEFzB,OAAA,CAACJ,QAAQ;cACP0C,KAAK,EAAE;gBAAEC,MAAM,EAAE;cAAU,CAAE;cAC7BF,OAAO,EAAElB;YAAkB;cAAAqB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAC3B;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACK;QAAA;MAGf;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV,CAAC;AAACtC,EAAA,CArEIF,SAAS;AAAAyC,EAAA,GAATzC,SAAS;AAuEf,eAAeA,SAAS;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}