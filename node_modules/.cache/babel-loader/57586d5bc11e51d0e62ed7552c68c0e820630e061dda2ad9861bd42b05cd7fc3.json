{"ast":null,"code":"var _jsxFileName = \"/Users/darshan.a/Documents/Fraud Guard/fraud-guard/src/components/VoiceChatBot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport annyang from \"annyang\";\nimport ChatInput from \"./ChatInput\";\nimport Box from \"@mui/material/Box\";\nimport ChatData from \"./ChatData\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar num_id;\nexport const VoiceChatBot = _ref => {\n  _s();\n  let {\n    ipData\n  } = _ref;\n  const [chat, setChatData] = useState([]);\n  const [aiData, setAiData] = useState(\"\");\n  function stopRecording() {\n    if (annyang) {\n      annyang.removeCallback(\"result\", handleSpeechResult);\n      annyang.abort();\n    }\n  }\n  function startRecoding(num) {\n    annyang.start();\n    num_id = num;\n    if (annyang) {\n      annyang.start();\n      annyang.addCallback(\"result\", handleSpeechResult);\n    }\n  }\n  async function sendPostData(_ref2) {\n    let {\n      query,\n      id\n    } = _ref2;\n    console.log(\"queru \", query);\n    const response = await axios.post(\"http://127.0.0.1:5000/bard_response\", {\n      question: query\n    });\n    setAiData(response.data);\n    // setAiData(response.data);\n  }\n\n  const handleSpeechResult = userSaid => {\n    // setText(userSaid);\n    setChatData(prev => [...prev, {\n      chat: userSaid\n    }]);\n    setTimeout(stopRecording, 1000);\n  };\n  const setTextInput = _ref3 => {\n    let {\n      query,\n      id\n    } = _ref3;\n    // const setData = chat.map((item) => {\n    //   if (item?.id === id) return { ...item, text: query };\n    //   return item;\n    // });\n\n    setChatData(prev => [...prev, {\n      id: id,\n      text: query,\n      ai: \"\"\n    }]);\n    console.log(\"id \", id);\n    // setChatData(setData);\n  };\n\n  console.log(\"chat in \", chat);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      gap: 5,\n      marginTop: 5\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(ChatInput, {\n        startRecoding: startRecoding,\n        sendPostData: sendPostData,\n        setTextInput: setTextInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        height: 1000,\n        width: 1000,\n        border: \"1px solid black\",\n        borderRadius: \"10px\",\n        fontFamily: \"inherit\"\n      },\n      children: chat.length > 0 && /*#__PURE__*/_jsxDEV(ChatData, {\n        ipData: ipData,\n        chat: chat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(VoiceChatBot, \"IEayvpnSl7cqBHW3anqb+3PIft0=\");\n_c = VoiceChatBot;\nconst TextDisplay = _ref4 => {\n  let {\n    text\n  } = _ref4;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_c2 = TextDisplay;\nexport default VoiceChatBot;\nvar _c, _c2;\n$RefreshReg$(_c, \"VoiceChatBot\");\n$RefreshReg$(_c2, \"TextDisplay\");","map":{"version":3,"names":["React","useState","annyang","ChatInput","Box","ChatData","axios","jsxDEV","_jsxDEV","num_id","VoiceChatBot","_ref","_s","ipData","chat","setChatData","aiData","setAiData","stopRecording","removeCallback","handleSpeechResult","abort","startRecoding","num","start","addCallback","sendPostData","_ref2","query","id","console","log","response","post","question","data","userSaid","prev","setTimeout","setTextInput","_ref3","text","ai","sx","display","flexDirection","alignItems","gap","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","height","width","border","borderRadius","fontFamily","length","_c","TextDisplay","_ref4","_c2","$RefreshReg$"],"sources":["/Users/darshan.a/Documents/Fraud Guard/fraud-guard/src/components/VoiceChatBot.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport annyang from \"annyang\";\nimport ChatInput from \"./ChatInput\";\nimport Box from \"@mui/material/Box\";\nimport ChatData from \"./ChatData\";\nimport axios from \"axios\";\n\nvar num_id;\nexport const VoiceChatBot = ({ ipData }) => {\n  const [chat, setChatData] = useState([]);\n  const [aiData, setAiData] = useState(\"\");\n\n  function stopRecording() {\n    if (annyang) {\n      annyang.removeCallback(\"result\", handleSpeechResult);\n      annyang.abort();\n    }\n  }\n\n  function startRecoding(num) {\n    annyang.start();\n    num_id = num;\n    if (annyang) {\n      annyang.start();\n      annyang.addCallback(\"result\", handleSpeechResult);\n    }\n  }\n\n  async function sendPostData({ query, id }) {\n    console.log(\"queru \", query);\n    const response = await axios.post(\"http://127.0.0.1:5000/bard_response\", {\n      question: query,\n    });\n    setAiData(response.data);\n    // setAiData(response.data);\n  }\n\n  const handleSpeechResult = (userSaid) => {\n    // setText(userSaid);\n    setChatData((prev) => [...prev, { chat: userSaid }]);\n    setTimeout(stopRecording, 1000);\n  };\n\n  const setTextInput = ({ query, id }) => {\n    // const setData = chat.map((item) => {\n    //   if (item?.id === id) return { ...item, text: query };\n    //   return item;\n    // });\n\n    setChatData((prev) => [...prev, { id: id, text: query, ai: \"\" }]);\n    console.log(\"id \", id);\n    // setChatData(setData);\n  };\n\n  console.log(\"chat in \", chat);\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        gap: 5,\n        marginTop: 5,\n      }}\n    >\n      <Box>\n        <ChatInput\n          startRecoding={startRecoding}\n          sendPostData={sendPostData}\n          setTextInput={setTextInput}\n        />\n      </Box>\n      <Box\n        sx={{\n          height: 1000,\n          width: 1000,\n          border: \"1px solid black\",\n          borderRadius: \"10px\",\n          fontFamily: \"inherit\",\n        }}\n      >\n        {chat.length > 0 && <ChatData ipData={ipData} chat={chat} />}\n      </Box>\n    </Box>\n  );\n};\n\nconst TextDisplay = ({ text }) => {\n  return (\n    <div>\n      {/* <h2>Converted Text</h2> */}\n      <p>{text}</p>\n    </div>\n  );\n};\n\nexport default VoiceChatBot;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}